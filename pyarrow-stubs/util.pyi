from collections.abc import Sequence
from typing import Callable
from typing import TypeVar

_T = TypeVar("_T")

def implements(f: Callable): ...
def product(seq: Sequence[_T]) -> _T: ...
def get_contiguous_span(
    shape: tuple[int, ...], strides: tuple[int, ...], itemsize: int
) -> tuple[int, int]: ...
def find_free_port() -> int: ...
def guid() -> str: ...
